{"version":3,"sources":["images/ok.svg","images/trash-black.svg","images/added.svg","images/timeToDo.svg","images/trash.svg","images/happy.svg","images/sad.svg","reducers/ToDoReducer.js","contexts/ToDoContext.js","reducers/DoneReducer.js","contexts/DoneContext.js","components/Header.js","contexts/changeComponentContext.js","components/ToDoDetails.js","components/ToDoList.js","components/NewTaskForm.js","components/Nav.js","components/DoneDetails.js","components/DoneList.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","ToDoReducer","state","action","console","log","type","time","Date","id","uid","title","task","howLong","unitOfTime","addTimeInMilisec","getTime","filter","index","findIndex","item","updatedState","ToDoContext","createContext","ToDoContextProvider","children","useReducer","localData","localStorage","getItem","JSON","parse","tasks","ToDoDispatch","useEffect","setItem","stringify","Provider","value","DoneReducer","success","added","toLocaleString","DoneContext","DoneContextProvider","done","DoneDispatch","Header","useContext","ChangeComponent","ChangeComponentProvider","useState","component","setComponent","ToDoDetails","actualTime","tab","className","src","timeToDo","distance","days","Math","floor","hours","hoursGreaterThanZero","minutes","floorMinutes","minutesGreaterThanZero","ceil","calculateTime","theTime","AddTime","ok","alt","onClick","e","target","parentNode","classList","add","setTimeout","End","trash","ToDoList","length","map","key","NewTaskForm","setTitle","setTime","unit","setUnit","setTimeFunction","char","onSubmit","preventDefault","timeToSend","handleSubmit","for","name","required","placeholder","onChange","class","readOnly","Nav","setWhatContent","addActiveClass","first","document","querySelector","second","remove","Remove","DoneDetails","App","whatContent","content","DoneList","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7b0a59ff.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/ok.93ce7e51.svg\";","module.exports = __webpack_public_path__ + \"static/media/trash-black.8ab5bde4.svg\";","module.exports = __webpack_public_path__ + \"static/media/added.4ef06c47.svg\";","module.exports = __webpack_public_path__ + \"static/media/timeToDo.e488398a.svg\";","module.exports = __webpack_public_path__ + \"static/media/trash.8ab5bde4.svg\";","module.exports = __webpack_public_path__ + \"static/media/happy.18abdd3a.svg\";","module.exports = __webpack_public_path__ + \"static/media/sad.2c43fc8f.svg\";","import uid from 'uid';\r\n\r\nexport const ToDoReducer = (state,action) =>{\r\n    console.log(state)\r\n    switch(action.type){\r\n        case 'ADD_TASK':\r\n            let time = new Date();\r\n            return( \r\n            [ { \r\n                id:uid(),\r\n                title:action.task.title,\r\n                howLong:action.task.howLong,\r\n                unitOfTime:action.task.time,\r\n                addTimeInMilisec:time.getTime()\r\n            }, ...state\r\n        ]\r\n            )\r\n        case 'REMOVE_TASK':       \r\n            return state.filter(task =>  task.id !== action.id)\r\n\r\n        case 'UPDATE_TIME':\r\n            let index = state.findIndex(item => item.id === action.id);         \r\n            let updatedState = state;\r\n            updatedState[index].howLong = action.howLong;\r\n            state = updatedState;\r\n\r\n            return state;\r\n\r\n        default: return state \r\n    }\r\n}","import React, {createContext, useEffect, useReducer} from 'react';\r\nimport {ToDoReducer} from '../reducers/ToDoReducer'\r\n\r\nexport const ToDoContext = createContext();\r\n\r\nconst ToDoContextProvider = ({children}) => {\r\n\r\n    const [tasks, ToDoDispatch] = useReducer(ToDoReducer, [], () => {\r\n            const localData = localStorage.getItem('tasks');\r\n            return localData!=='undefined' ? JSON.parse(localData) : [] \r\n        });\r\n            \r\n        useEffect( () => {\r\n            localStorage.setItem('tasks', JSON.stringify(tasks))\r\n        }, [tasks])\r\n    \r\n    return (\r\n        <ToDoContext.Provider value={{tasks, ToDoDispatch}}>\r\n            {children}\r\n        </ToDoContext.Provider>\r\n    )\r\n}\r\n\r\nexport default ToDoContextProvider\r\n","import uid from 'uid';\r\n\r\nexport const DoneReducer = (state,action) =>{\r\n    switch(action.type){\r\n        case 'ADD_DONE':\r\n            let time = new Date();\r\n            return(\r\n            [ {\r\n                id:uid(),\r\n                title:action.title,\r\n                success: action.success,\r\n                added:time.toLocaleString()\r\n            }, ...state\r\n        ]\r\n            )\r\n\r\n        case 'REMOVE_TASK':\r\n            return state.filter(task =>  task.id !== action.id)\r\n            \r\n        default:return state\r\n    }\r\n}","import React, {createContext, useReducer, useEffect} from 'react'\r\nimport {DoneReducer} from '../reducers/DoneReducer'\r\n\r\nexport const DoneContext = createContext();\r\n\r\nconst DoneContextProvider = ({children}) => {\r\n\r\n    const [done, DoneDispatch] = useReducer(DoneReducer, [], () => {\r\n        const localData = localStorage.getItem('done');\r\n        return localData!=='undefined' ? JSON.parse(localData) : []\r\n    });\r\n\r\n    useEffect( () => {\r\n        localStorage.setItem('done', JSON.stringify(done))\r\n    }, [done])\r\n\r\n\r\n    return (\r\n        <DoneContext.Provider value={{done, DoneDispatch}}>\r\n            {children}\r\n        </DoneContext.Provider>\r\n    )\r\n}\r\n\r\nexport default DoneContextProvider\r\n","import React, {useContext} from 'react'\r\nimport { ToDoContext } from '../contexts/ToDoContext'\r\nimport { DoneContext } from '../contexts/DoneContext'\r\n\r\nconst Header = () => {\r\n    const {tasks} = useContext(ToDoContext);\r\n    const {done} = useContext(DoneContext);\r\n\r\n    return (\r\n        <header>\r\n            <h1>Another do to list...</h1>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React, {createContext, createState, useState} from 'react'\r\n\r\nexport const ChangeComponent = createContext();\r\n\r\nconst ChangeComponentProvider = ({children}) => {\r\n\r\n    const [component, setComponent] = useState(true)\r\n\r\n    return (\r\n        <ChangeComponent.Provider value={{component, setComponent}}>\r\n            {children}\r\n        </ChangeComponent.Provider>\r\n    )\r\n}\r\n\r\nexport default ChangeComponentProvider\r\n","import React, {useContext, useState} from 'react'\r\nimport {ToDoContext} from '../contexts/ToDoContext'\r\nimport {DoneContext} from '../contexts/DoneContext'\r\nimport ok from '../images/ok.svg'\r\nimport trash from '../images/trash-black.svg'\r\nimport {ChangeComponent} from '../contexts/changeComponentContext';\r\nimport added from '../images/added.svg';\r\nimport timeToDo from '../images/timeToDo.svg';\r\n\r\nconst ToDoDetails = ( {task} ) => {\r\n\r\n    const {ToDoDispatch} = useContext(ToDoContext)\r\n    const {DoneDispatch} = useContext(DoneContext)\r\n    const {component, setComponent} = useState(ChangeComponent)\r\n\r\n    let actualTime = new Date().getTime()\r\n    const tab = [];\r\n\r\n    tab[task.id] = task.howLong - actualTime;\r\n\r\n    const calculateTime = () => {\r\n        let distance = tab[task.id];\r\n\r\n        let days = Math.floor(distance / (1000 * 60 * 60 * 24));\r\n        let hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\r\n\r\n        if(days > 0){\r\n\r\n            let hoursGreaterThanZero = hours ? (`and ${hours}h`) : ('');\r\n\r\n            if(days === 1){\r\n                return `${days} day ${hoursGreaterThanZero}`;\r\n            } else {\r\n                return `${days} days  ${hoursGreaterThanZero}`;\r\n            }\r\n        } else {\r\n\r\n            let hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\r\n            let minutes = (distance % (1000 * 60 * 60)) / (1000 * 60);\r\n\r\n            if(hours > 0){\r\n\r\n                let floorMinutes = Math.floor(minutes);\r\n                let minutesGreaterThanZero = floorMinutes ? (`and ${floorMinutes}m`) : ('');\r\n                if(hours === 1){\r\n                    return `${hours} hour ${minutesGreaterThanZero}`;\r\n                } else {\r\n                    return `${hours} hours ${minutesGreaterThanZero}`;\r\n                }\r\n            } else {\r\n                \r\n                if(minutes > 0){\r\n\r\n                    minutes = Math.ceil(minutes);\r\n\r\n                    if(minutes === 1){\r\n                        return `less than 1 minute`;\r\n                    } else {\r\n                        return `${minutes} minutes`;\r\n                    }\r\n                } else {\r\n\r\n                    //remove item from TO-DO, then add to DONE as failed task\r\n                    ToDoDispatch({type:'REMOVE_TASK', id:task.id });\r\n                    DoneDispatch({\r\n                        type:'ADD_DONE',\r\n                        title:task.title,\r\n                        success:false\r\n                     })\r\n\r\n                    return 'TIME EXPIRED';\r\n                }\r\n            }\r\n        }\r\n        \r\n\r\n\r\n    }\r\n\r\n    const AddTime = time =>{\r\n\r\n        let date = new Date();\r\n        let theTime = date - time;\r\n        theTime = theTime/(100*60*60*60)\r\n        if(theTime < 1){\r\n            return 'Today';\r\n        }else if(theTime < 2) {\r\n            return 'Yesterday';\r\n        }else{\r\n            return `${Math.floor(theTime)} days ago`\r\n        }\r\n    }\r\n    const Remove = () => {\r\n        ToDoDispatch({type:'REMOVE_TASK', id:task.id})\r\n    }\r\n    const End = (e) => {\r\n        let liItem = e.target.parentNode.parentNode;\r\n        liItem.classList.add('move-right');\r\n\r\n        setTimeout(() => {\r\n            DoneDispatch({type:'ADD_DONE', title:task.title, success:true});\r\n            ToDoDispatch({type:'REMOVE_TASK', id:task.id});\r\n        },700)\r\n        \r\n    }\r\n\r\n    \r\n\r\n    return (\r\n        <li className=\"li-item to-do\">\r\n            <div>\r\n                 {task.title}\r\n            </div>\r\n            <div className=\"img-and-text\">\r\n                <img src={timeToDo} /> \r\n                { calculateTime()}\r\n            </div>  \r\n            <div className=\"img-and-text\">\r\n                 <img src={added} />\r\n                 {AddTime(task.addTimeInMilisec)} \r\n            </div>\r\n            <div className=\"inside-image\" >\r\n            <img src={ok} alt=\"ok\" onClick={(e)=>End(e)}/>\r\n            </div>\r\n            <div className=\"inside-image\" \r\n            onClick={Remove}\r\n            ><img src={trash} alt=\"trash\"/>\r\n            </div>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default ToDoDetails\r\n","import React, {useContext, useState} from 'react';\r\nimport { ToDoContext } from '../contexts/ToDoContext'\r\nimport ToDoDetails from './ToDoDetails';\r\n\r\nconst ToDoList = () => {\r\n    const {tasks} = useContext(ToDoContext);\r\n    \r\n    return tasks.length ? (\r\n        <div className=\"list-of-tasks\">\r\n            <ul>\r\n                {tasks.map( task => {\r\n                    return (<ToDoDetails task={task} key={task.id}></ToDoDetails>)\r\n                })}\r\n            </ul>\r\n        </div>\r\n    ) : (\r\n        <div className=\"list-of-tasks-empty\">\r\n            <h1>You have nothing to do, right now.</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ToDoList\r\n","import React, {useContext, useState} from 'react'\r\nimport {ToDoContext} from '../contexts/ToDoContext'\r\n\r\nconst NewTaskForm = () => {\r\n\r\n    const {ToDoDispatch} = useContext(ToDoContext);\r\n\r\n    const [title,setTitle] = useState('');\r\n    const [time, setTime] = useState(1);\r\n    const [unit, setUnit] = useState('Minute(s)')\r\n\r\nconst handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    let timeToSend = time*1000*60; //minutes in milisec\r\n    console.log(timeToSend*60)\r\n\r\n    if(unit === 'Hour(s)') timeToSend *= 60; //hours in milisec\r\n    else if(unit === 'Day(s)') timeToSend *= 60*24; //days in milisec\r\n\r\n    ToDoDispatch({type:'ADD_TASK',task: \r\n                {\r\n                    title:title,\r\n                    howLong:timeToSend + new Date().getTime(),\r\n                    unit:unit\r\n                }\r\n})\r\n    setTitle('');\r\n    setTime(1);\r\n}\r\n\r\n    const setTimeFunction = (char) => {\r\n        if(char === '-' && time > 1){\r\n            setTime(time - 1);\r\n        } else if(char==='+') {\r\n            setTime(time + 1);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"to-do-form\">\r\n            <form className=\"form\" onSubmit={(e)=>{handleSubmit(e)}}>\r\n                <div className=\"inside-form\">\r\n             <div className=\"inputs\">\r\n                <div className=\"single-input first\">\r\n                    <label for=\"title\">Title:</label> \r\n                    <input id=\"title\" name=\"title\" type=\"text\" required placeholder=\"e.g. to go sleeping...\" value={title} \r\n                    onChange={(e) => { setTitle(e.target.value)}}/><br/> \r\n                </div>\r\n                <div className=\"single-input second\">\r\n                    <label for=\"time\">Duration:</label>\r\n                    <div class=\"input-number\">\r\n                        <input type=\"button\" onClick={() => {setTimeFunction('-')}} value=\"-\"/>\r\n                        <input type=\"number\" \r\n                        value={time} name=\"time\" id=\"time\" readOnly\r\n                        />\r\n                        <input type=\"button\" onClick={() => {setTimeFunction('+')}} value=\"+\"/>\r\n                    </div>\r\n\r\n                    <select \r\n                    onChange={(e) => { setUnit(e.target.value)}}>\r\n                        <option>Minute(s)</option>\r\n                        <option>Hour(s)</option>\r\n                        <option>Day(s)</option>\r\n                    </select>\r\n                </div>\r\n            </div>\r\n\r\n                    <input className=\"submit-btn\" type=\"submit\" value=\"Add new task\"/>\r\n\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewTaskForm\r\n","import React, {useContext} from 'react'\r\n\r\nconst Nav = ({setWhatContent}) => {\r\n\r\n    const addActiveClass = (target) => {\r\n        let first = document.querySelector('.nav-option.first');\r\n        let second = document.querySelector('.nav-option.second');\r\n        if (target===\"first\"){\r\n            setWhatContent(true);\r\n            first.classList.add('active');\r\n            second.classList.remove('active');\r\n        } else {\r\n            setWhatContent(false);\r\n            second.classList.add('active');\r\n            first.classList.remove('active');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"nav\">\r\n            <div className=\"nav-grid\">\r\n                <div className=\"nav-option first active\" onClick = { () => {addActiveClass('first')}}>To do</div>\r\n                <div className=\"line\"></div>  \r\n                <div className=\"nav-option second\" onClick = { () => {addActiveClass('second')}}>Done</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Nav\r\n","import React from 'react'\r\nimport happy from '../images/happy.svg';\r\nimport sad from '../images/sad.svg';\r\nimport trash from '../images/trash.svg';\r\n\r\nconst ToDoDetails = ( {done, DoneDispatch} ) => {\r\n\r\n    const Remove = (e) => {\r\n        let liItem = e.target.parentNode.parentNode;\r\n        liItem.classList.add('move-right');\r\n        \r\n        setTimeout(() => {\r\n            DoneDispatch({type:\"REMOVE_TASK\", id:done.id});\r\n        },700);\r\n\r\n       \r\n    }\r\n\r\n\r\n    return (\r\n        <li class=\"li-item done\" >\r\n            <div>\r\n             {done.title} \r\n            </div> \r\n            <div>\r\n                <img onClick={(e) =>{ Remove(e)}} src={trash}/>\r\n            </div>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default ToDoDetails\r\n","import React, {useContext, useState} from 'react';\r\nimport {DoneContext} from '../contexts/DoneContext'\r\nimport DoneDetails from './DoneDetails';\r\n\r\nconst ToDoList = () => {\r\n    const {done, DoneDispatch} = useContext(DoneContext);\r\n\r\n    return done.length ? (\r\n        <div className=\"list-of-tasks\">\r\n            <ul>\r\n                {done.map( done => {\r\n                    return (<DoneDetails DoneDispatch={DoneDispatch} done={done} key={done.id}></DoneDetails>)\r\n                })}\r\n            </ul>\r\n        </div>\r\n    ) : (\r\n        <div className=\"list-of-tasks-empty\">\r\n            <h1>You have done nothing at this moment</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ToDoList\r\n","import React, { useState} from 'react';\nimport Header from './components/Header';\nimport ToDoContextProvider from './contexts/ToDoContext';\nimport DoneContextProvider from './contexts/DoneContext';\nimport ToDoList from './components/ToDoList';\nimport NewTaskForm from './components/NewTaskForm';\nimport Nav from './components/Nav'\nimport DoneList from './components/DoneList'\nimport ChangeComponentProvider,{ChangeComponent} from './contexts/changeComponentContext';\n\n\n\nfunction App() {\n\n  const [whatContent, setWhatContent] = useState(true)\n\n  const content = whatContent ? (<ToDoList/>) : (<DoneList/>)\n\n  if(!localStorage.getItem(\"tasks\")){ localStorage.setItem(\"tasks\",\"[]\")}\n  if(!localStorage.getItem(\"done\")){ localStorage.setItem(\"done\",\"[]\")}\n\n  return (\n    <div className=\"App\">\n           <ToDoContextProvider>\n              <DoneContextProvider>\n               <ChangeComponentProvider>\n                <Header/>\n                <NewTaskForm/>\n                <Nav setWhatContent={setWhatContent}/>\n                {content}\n               </ChangeComponentProvider>\n              </DoneContextProvider>\n           </ToDoContextProvider>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}